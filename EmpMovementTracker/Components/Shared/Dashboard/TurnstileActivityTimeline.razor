@inject ISnackbar Snackbar

<MudTimeSeriesChart
    Class="turnstileActivityTimeline"
    ChartSeries="series"
    ChartOptions="chartOptions"
    AxisChartOptions="axisChartOptions"
    TimeLabelSpacing="TimeSpan.FromMinutes(60)"
    TimeLabelFormat="HH:mm tt"
    DataMarkerTooltipTimeLabelFormat="HH:mm tt"
    Width="100%"
    Height="200px"
>
    <CustomGraphics>
        <style>
            .turnstileActivityTimeline text {
                font-size: xx-small;
            }
        </style>
    </CustomGraphics>
</MudTimeSeriesChart>

@code {
    [Parameter] public List<TimeSeriesChartSeries.TimeValue> TimelineData { get; set; } = [];

    // Variable declaration & initialization
    private List<TimeSeriesChartSeries> series = new();
    private TimeSeriesChartSeries chart = new();
    private AxisChartOptions axisChartOptions = new AxisChartOptions
    {
        MatchBoundsToSize = true,
    };
    private ChartOptions chartOptions = new ChartOptions
    {
        YAxisLines = false,
        MaxNumYAxisTicks = 5,
        LineStrokeWidth = 1,
        ShowLegend = false,
    };

    // Action on component initialization
    protected override void OnParametersSet()
    {
        try
        {
            // Clear previous data if any
            series.Clear();

            chart = new TimeSeriesChartSeries
            {
                Index = 0,
                Data = TimelineData,
                IsVisible = true,
                LineDisplayType = LineDisplayType.Area,
                DataMarkerTooltipTitleFormat = "{{X_VALUE}}",
                DataMarkerTooltipSubtitleFormat = "Turnstile Access Count: {{Y_VALUE}}"
            };
            series.Add(chart);

            StateHasChanged();
        }
        catch (Exception)
        {
            Snackbar.Add("An error occurred while loading the chart data. Please refresh the page or try again later.", Severity.Error);
        }
    }
}