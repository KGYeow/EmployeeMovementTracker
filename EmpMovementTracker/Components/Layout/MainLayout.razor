@using EmpMovementTracker.Components.Shared
@using System.Reflection
@using EmpMovementTracker.Services

@inject LayoutService LayoutService
@inject ISnackbar Snackbar
@inject NavigationManager Nav

@inherits LayoutComponentBase

@* Required *@
<MudThemeProvider Theme="MyCustomTheme" />
<MudPopoverProvider />

@* Needed for dialogs *@
<MudDialogProvider />

@* Needed for snackbars *@
<MudSnackbarProvider />

<MudLayout>
    <!-- Topbar -->
    <MudAppBar Color="Color.Primary" ToolBarClass="gap-4" Dense>
        <MudToggleIconButton Icon="@Icons.Material.Rounded.Menu" ToggledIcon="@Icons.Material.Rounded.MenuOpen" Color="Color.Inherit" Edge="Edge.Start" @bind-Toggled="drawerOpen" />
        <MudText Class="fw-bold" Typo="Typo.subtitle1">Employee Movement Tracker</MudText>
    </MudAppBar>

    <!-- Sidebar -->
    <MudDrawer Variant="DrawerVariant.Mini" Breakpoint="Breakpoint.None" Color="Color.Primary" ClipMode="DrawerClipMode.Always" @bind-Open="@drawerOpen">
        <NavMenu DrawerOpen="drawerOpen" />
    </MudDrawer>

    <!-- Main Content -->
    <MudMainContent Class="min-vh-100">
        <!-- Page Content -->
        <MudContainer Class="py-6" MaxWidth="MaxWidth.Large">
            <MudBreadcrumbs Class="px-0 py-3" Items="BreadcrumbsItems" Style="margin-top: -24px">
                <SeparatorTemplate>
                    <MudIcon Icon="@Icons.Material.Rounded.KeyboardArrowRight" Style="font-size: 14px" />
                </SeparatorTemplate>
                <ItemTemplate Context="item">
                    <MudLink Href="@item.Href" Underline="Underline.None" Disabled="@item.Disabled">
                        <MudText Typo="Typo.body2">@item.Text</MudText>
                    </MudLink>
                </ItemTemplate>
            </MudBreadcrumbs>
            @Body
        </MudContainer>  
    </MudMainContent>

    <!-- Footer -->
    <Footer />
</MudLayout>

@code {
    [CascadingParameter] private RouteData? RouteData { get; set; }

    // Variable declaration & initialization
    private bool drawerOpen = false;
    private List<BreadcrumbItem> BreadcrumbsItems { get; set; } = new();

    // Define custom theme
    MudTheme MyCustomTheme = new MudTheme()
    {
        PaletteLight = new PaletteLight()
        {
            Primary = "#003D6B",
            Secondary = "#9FA8DA",
            Tertiary = "#E8EAF6",
            Background = "#F5F5F5",
            DrawerIcon = "#FFFFFF",
        },
        LayoutProperties = new LayoutProperties()
        {
            DefaultBorderRadius = "8px",
        }
    };

    protected override void OnInitialized()
    {
        LayoutService.OnBreadcrumbsChanged += LayoutChanged;
        BreadcrumbsItems = LayoutService.Breadcrumbs.ToList();
    }

    private void LayoutChanged()
    {
        BreadcrumbsItems = LayoutService.Breadcrumbs.ToList();
        InvokeAsync(StateHasChanged);
    }

    public void Dispose()
    {
        LayoutService.OnBreadcrumbsChanged -= LayoutChanged;
    }
}